Option Explicit

Dim content As Variant ' Dichiarazione variabile content
Dim orario As String ' Dichiarazione variabile orario
Dim columnI As Integer ' Dichiarazione variabile ColumnI
Dim columnF As Integer ' Dichiarazione variabile ColumnF
Dim Column As Integer ' Dichiarazione variabile Column
Dim rngStart As Range, rngEnd As Range, rngName As Range, rngLines As Range, rngRoles As Range ' Dichiarazione variabile rngC, rngD, rngName e rngLines
Dim Times As Range ' Dichiarazione variabile Times
Dim Time As Range ' Dichiarazione variabile Time
Dim ColumnFound As Integer ' Dichiarazione variabile ColumnFound
Dim OriginalRow As Integer ' Dichiarazione variabile OriginalRow
Dim rangeName As String ' Dichiarazione variabile rangeName
Dim Answer As Long ' Dichiarazione variabile Answer
Dim ColumnName As Integer ' Dichiarazione variabile ColumnName
Dim ColumnNameAproximation As Single ' Dichiarazione variabile ColumnNameAproximation
Dim ColumnNameTemp As Integer ' Dichiarazione variabile ColumnNameTemp
Dim cell As Range ' Dichiarazione variabile Cell
Dim i As Integer ' Dichiarazione variabile i
Dim incrementing As Boolean ' Dichiarazione variabile incrementing
Dim CheckName As Boolean ' Dichiarazione variabile CheckName
Dim AnswerQuestion As Long ' Dichiarazione variabile AnswerQuestion

Private Sub Worksheet_SelectionChange(ByVal Target As Range) ' evento cambio selezione
Dim Password
    Password = "Ej20082018*Excel"
    Set rngStart = Range("E2:E148")
    Set rngEnd = Range("F2:F148")
    Set rngName = Range("C3:C148")
    Set rngLines = Range("I2:BW148")
    Set rngRoles = Range("G2:H148")
    On Error Resume Next
    ' Verifica se è stata selezionata una sola cella
    If Target.Cells.Count = 1 Then
        content = Target.Formula
    End If
    On Error GoTo 0
    If Not Intersect(Target, rngStart) Is Nothing Or Not Intersect(Target, rngEnd) Is Nothing _
    Or Not Intersect(Target, rngName) Is Nothing Or Not Intersect(Target, rngLines) Is Nothing _
    Or Not Intersect(Target, rngRoles) Is Nothing Or Not Intersect(Target, Range("A1:C2")) Is Nothing _
    Or Not Intersect(Target, Range("CM3:CM21")) Is Nothing Then
        ActiveSheet.Unprotect Password:=Password
    Else
        ActiveSheet.Protect Password:=Password
    End If
End Sub
Private Sub Worksheet_Change(ByVal Target As Range) ' evento cambio valore cella

    On Error GoTo Cleanup ' Gestione degli errori
    columnF = 0
    columnI = 0

    ' Disabilita temporaneamente gli eventi
    Application.EnableEvents = False

    ' Definisci gli intervalli
    Set rngStart = Range("E2:E148")
    Set rngEnd = Range("F2:F148")
    Set rngName = Range("C3:C148")
    Set rngLines = Range("I2:BW148")
    Set rngRoles = Range("G2:H148")

    ' Verifica se la cella cambiata è all'interno di uno degli intervalli specificati
    If Not Intersect(Target, rngStart) Is Nothing And Target.Interior.Color <> RGB(255, 255, 255) Then
        orario = Target.Text
        OriginalRow = Target.Row
        rangeName = "I"
    ElseIf Not Intersect(Target, rngEnd) Is Nothing And Target.Interior.Color <> RGB(255, 255, 255) Then
        orario = Target.Text
        OriginalRow = Target.Row
        rangeName = "F"
    ElseIf Not Intersect(Target, rngName) Is Nothing And Target.Interior.Color <> RGB(255, 255, 255) Then
        OriginalRow = Target.Row
        CheckName = True
        GoTo NameChange
    ElseIf Not Intersect(Target, rngLines) Is Nothing And (Target.Value = "P" Or content = "P") Then
        OriginalRow = Target.Row - 1
        GoTo Pause
    ElseIf Not Intersect(Target, rngLines) Is Nothing And Cells(Target.Row, 3).Interior.Color <> RGB(255, 255, 255) Then
        OriginalRow = Target.Row
        GoTo BlockLine
    ElseIf Not Intersect(Target, rngLines) Is Nothing And Cells(Target.Row, 3).Interior.Color = RGB(255, 255, 255) Then
        If Cells(Target.Row - 1, Target.Column).Value = "N" Or Cells(Target.Row - 1, Target.Column).Value = "I" Or Cells(Target.Row - 1, Target.Column).Value = "F" Then
            OriginalRow = Target.Row - 1
        ElseIf Cells(Target.Row + 1, Target.Column).Value = "N" Or Cells(Target.Row + 1, Target.Column).Value = "I" Or Cells(Target.Row + 1, Target.Column).Value = "F" Then
            OriginalRow = Target.Row + 1
        End If
        GoTo TextChange
    Else
        If Not Intersect(Target, rngRoles) Is Nothing Or Not Intersect(Target, Range("A1:C2")) Then
            With Target
                .HorizontalAlignment = xlCenter
                .VerticalAlignment = xlCenter
                .Font.name = "Calibri"
                .Font.Bold = True
                .Font.Size = 25
            End With
        End If
        GoTo Cleanup
    End If

    ' Controlla se la formula salvata è valida prima di assegnarla
    If Not IsError(Application.Evaluate(content)) Then
        Target.Formula = content
    Else
        MsgBox "Errore: La formula salvata non è valida."
    End If

    ' Definisci l'intervallo in cui vuoi cercare (ad esempio, la riga 1)
    Set Times = Range("I1:BW1")

    ' Cicla attraverso ogni cella nella riga specificata
    For Each Time In Times
        ' Se l'orario è alle 6, chiedi se di mattina
        If orario = "5:00" Then
            Answer = MsgBox("Le 5:00 di mattina?", vbYesNo + vbQuestion + vbDefaultButton1)
            If Answer = vbYes Then
                ColumnFound = 9
            Else
                ColumnFound = 71
            End If
            Exit For
        ElseIf orario = "5:30" Then
            Answer = MsgBox("Le 5:30 di mattina?", vbYesNo + vbQuestion + vbDefaultButton1)
            If Answer = vbYes Then
                ColumnFound = 10
            Else
                ColumnFound = 72
            End If
            Exit For
        ElseIf orario = "6:00" Then
            Answer = MsgBox("Le 6:00 di mattina?", vbYesNo + vbQuestion + vbDefaultButton1)
            If Answer = vbYes Then
                ColumnFound = 11
            Else
                ColumnFound = 73
            End If
            Exit For
        ElseIf orario = "6:30" Then
            Answer = MsgBox("Le 6:30 di mattina?", vbYesNo + vbQuestion + vbDefaultButton1)
            If Answer = vbYes Then
                ColumnFound = 13
            Else
                ColumnFound = 74
            End If
            Exit For
        ElseIf orario = "7:00" Then
            Answer = MsgBox("Le 7:00 di mattina?", vbYesNo + vbQuestion + vbDefaultButton1)
            If Answer = vbYes Then
                ColumnFound = 15
            Else
                ColumnFound = 75
            End If
            Exit For
        End If
        ' Controlla se la cella contiene il valore uguale a "orario"
        If Time.Value = orario Then
            ColumnFound = Time.Column
            Exit For ' Esce dal ciclo una volta trovata la colonna
        End If
    Next Time

    ' Se è stata trovata la colonna, aggiorna la cella corrispondente
    If ColumnFound > 0 Then
        Cells(OriginalRow, ColumnFound).Value = rangeName
        ' Aggiorna la variabile Column corrispondente
        If rangeName = "I" Then
            columnI = ColumnFound
        Else
            columnF = ColumnFound
        End If
    ElseIf orario = "" Then
        ' Passa oltre se l'orario è vuoto
        ' (Nessuna azione viene eseguita in questo caso)
    Else
        ' Errore se non l'orario non viene trovato
        MsgBox "Errore: Orario non trovato nella riga di ricerca."
    End If

    ' Trova la posizione delle colonne "I" e "F" nella OriginalRow
    If rangeName = "I" Then
        columnI = ColumnFound
        For Each cell In Range(Cells(OriginalRow, 9), Cells(OriginalRow, 75))
            If cell.Value = "F" Then
                columnF = cell.Column
                Exit For
            End If
        Next cell
    ElseIf rangeName = "F" Then
        columnF = ColumnFound
        For Each cell In Range(Cells(OriginalRow, 9), Cells(OriginalRow, 75))
            If cell.Value = "I" Then
                columnI = cell.Column
                Exit For
            End If
        Next cell
    Else
        For Each cell In Range(Cells(OriginalRow, 9), Cells(OriginalRow, 75))
            If cell.Value = "I" Then
                columnI = cell.Column
                Exit For
            End If
        Next cell
        For Each cell In Range(Cells(OriginalRow, 9), Cells(OriginalRow, 75))
            If cell.Value = "F" Then
                columnF = cell.Column
                Exit For
            End If
        Next cell
    End If
    
    ' Elimina i valori dalla colonna "I" alla colonna "BT" per la OriginalRow
    Range(Cells(OriginalRow, Columns("I").Column), Cells(OriginalRow, Columns("BW").Column)).ClearContents

    ' Ripristina "I" e "F" nelle loro posizioni originali
    If columnI > 0 Then Cells(OriginalRow, columnI).Value = "I"
    If columnF > 0 Then Cells(OriginalRow, columnF).Value = "F"

    ' Cambia le celle comprese tra "I" e "F" in "N"
    If columnI > 0 And columnF > 0 And columnI < columnF Then
        For Column = columnI + 1 To columnF - 1
            If Cells(OriginalRow + 1, Column) <> "P" Then
                Cells(OriginalRow, Column).Value = "N"
            End If
        Next Column
    End If
    
    ' Errore se la collona di I è maggiore della colonna di F
    If columnI > 0 And columnF > 0 And columnI > columnF Then
        MsgBox "Errore: L'ora di inizio è dopo quella di fine.", vbRetryCancel + vbCritical
    End If
    
    If Cells(OriginalRow, 3).Value <> "" Then
        ColumnNameAproximation = (columnF - columnI) / 2 + columnI
        ColumnName = Round(ColumnNameAproximation)
        
        If Cells(OriginalRow - 1, ColumnName).Value <> "" Or Cells(OriginalRow, ColumnName).Value = "" Then
            ColumnNameTemp = ColumnName
            incrementing = True
            i = 0
            
            Do While Cells(OriginalRow - 1, ColumnName).Value <> "" Or Cells(OriginalRow, ColumnName).Value = ""
                If i >= 5 Then
                    incrementing = False ' Inizia a decrementare quando i raggiunge 5
                End If
        
                If incrementing Then
                    i = i + 1
                Else
                    i = i - 1
                End If
        
                ColumnName = ColumnNameTemp + i
                
                If ColumnName = columnI + 1 And Cells(OriginalRow - 1, ColumnName).Value <> "" Then
                    ColumnName = columnI
                End If
            Loop
        End If
        
        ' Cancella nome
        For Each cell In Range(Cells(OriginalRow - 1, 9), Cells(OriginalRow - 1, 75))
            If cell.Value = Cells(OriginalRow, 3).Value Then
                cell.ClearContents
            End If
        Next cell
        
        ' Mette il nome al turno
        If ColumnName > 0 And columnI > 0 And columnF > 0 Then
            Cells(OriginalRow - 1, ColumnName).Value = Cells(OriginalRow, 3).Value
            With Cells(OriginalRow - 1, ColumnName)
                .HorizontalAlignment = xlCenter
                .VerticalAlignment = xlCenter
                .Font.name = "Verdana"
                .Font.Bold = True
                .Font.Size = 26
            End With
        End If
    End If
   
    If Cells(OriginalRow, 3).Value = "" And (columnI > 0 Or columnF > 0) Then
        Cells(OriginalRow, 3).Interior.Color = RGB(255, 255, 0)
    Else
        Cells(OriginalRow, 3).Interior.Color = RGB(217, 217, 217)
    End If
   
    GoTo Cleanup
  
BlockLine:
    If (Target.Value = "i") Then
        Target.Value = "I"
    ElseIf (Target.Value = "n") Then
        Target.Value = "N"
    ElseIf (Target.Value = "f") Then
        Target.Value = "F"
    End If
    
    If (Target.Value <> "I") And (Target.Value <> "N") And (Target.Value <> "F") Then
        Target.Value = ""
    End If
    GoTo Cleanup
        
TextChange:
    If (Target.Value <> "") And (Target.Value <> "P") And (Target.Value <> Cells(Target.Row + 1, 3).Value) Then
        With Cells(Target.Row, Target.Column)
            .VerticalAlignment = xlCenter
            .Font.Bold = True
            .Font.Size = 28
            .Interior.Color = RGB(255, 255, 0)
        End With
    End If
    If Target.Value = "" Then
        If (Target.Column <= 34 And Target.Column >= 26) Or (Target.Column <= 53 And Target.Column >= 45) Then
            Target.Interior.Color = RGB(217, 217, 217)
        Else
            Target.Interior.Color = xlNone
        End If
    End If

    GoTo NameChange

Pause:
    
    If content = "P" Then
        For Each cell In Range(Cells(OriginalRow, 9), Cells(OriginalRow, 75))
            If cell.Value = "I" Then
                columnI = cell.Column
                Exit For
            End If
        Next cell
        
        For Each cell In Range(Cells(OriginalRow, 9), Cells(OriginalRow, 75))
            If cell.Value = "F" Then
                columnF = cell.Column
                Exit For
            End If
        Next cell
    End If
    
    If Target.Value = "P" Then
        If Cells(Target.Row - 1, Target.Column).Value = "N" Then
            Cells(Target.Row - 1, Target.Column).ClearContents
            With Cells(Target.Row, Target.Column)
                .HorizontalAlignment = xlCenter
                .VerticalAlignment = xlCenter
                .Font.Bold = True
                .Font.Size = 36
            End With
        End If
    ElseIf content = "P" Then
        If Cells(Target.Row - 1, Target.Column).Value = "" And _
        columnI < Target.Column And Target.Column < columnF Then
            Cells(Target.Row - 1, Target.Column).Value = "N"
        End If
    Else
        MsgBox "Errore nel blocco pausa."
    End If
    If Cells(OriginalRow, 3).Value <> "" Then
        GoTo NameChange
    End If

NameChange:
    For Each cell In Range(Cells(OriginalRow, 9), Cells(OriginalRow, 75))
        If cell.Value = "I" Then
            columnI = cell.Column
            Exit For
        End If
    Next cell
    
    For Each cell In Range(Cells(OriginalRow, 9), Cells(OriginalRow, 75))
        If Trim(cell.Value) = "F" Then
            columnF = cell.Column
            Exit For
        End If
    Next cell
    
    If Cells(OriginalRow, 3).Value = "" And columnI > 0 And columnF > 0 Then
        Cells(OriginalRow, 3).Interior.Color = RGB(255, 255, 0)
    Else
        Cells(OriginalRow, 3).Interior.Color = RGB(217, 217, 217)
    End If
    
    ColumnNameAproximation = (columnF - columnI) / 2 + columnI
    ColumnName = Round(ColumnNameAproximation)
    
    For Each cell In Range(Cells(OriginalRow - 1, columnI), Cells(OriginalRow - 1, columnF))
        If cell.Value <> "" And ((cell.Value = content And Target.Address = Cells(OriginalRow, 3).Address) Or cell.Value = Cells(OriginalRow, 3).Value) Then
            cell.ClearContents
        End If
    Next cell

    If Cells(OriginalRow - 1, ColumnName).Value <> "" Or Cells(OriginalRow, ColumnName).Value = "" Then
        ColumnNameTemp = ColumnName
        incrementing = True
        i = 0
        Do While Cells(OriginalRow - 1, ColumnName).Value <> "" Or Cells(OriginalRow, ColumnName).Value = ""
            If i >= 5 Then
                incrementing = False ' Inizia a decrementare quando i raggiunge 5
            End If
    
            If incrementing Then
                i = i + 1
            Else
                i = i - 1
            End If
    
            ColumnName = ColumnNameTemp + i
            
            If ColumnName = columnI + 1 And Cells(OriginalRow - 1, ColumnName).Value <> "" Then
                ColumnName = columnI
            End If
        Loop
    End If

    If ColumnName > 0 And columnI > 0 And columnF > 0 Then
        Cells(OriginalRow - 1, ColumnName).Value = Cells(OriginalRow, 3).Value
        With Cells(OriginalRow - 1, ColumnName)
            .HorizontalAlignment = xlCenter
            .VerticalAlignment = xlCenter
            .Font.name = "Verdana"
            .Font.Bold = True
            .Font.Size = 26
        End With
    End If
    
    If content = Cells(OriginalRow + 2, 3).Value And content <> "" Then
        OriginalRow = OriginalRow + 2
        GoTo NameChange
    ElseIf content = Cells(OriginalRow + 3, 3).Value And content <> "" Then
        OriginalRow = OriginalRow + 3
        GoTo NameChange
    End If
    GoTo Cleanup

Cleanup:
    
    columnF = 0
    columnI = 0
    
    ' Riabilita gli eventi, anche in caso di errore
    Application.EnableEvents = True
    
    ' Ripristina la gestione degli errori
    On Error GoTo 0
    
    ' Forza la fine e reset delle variabili
    End
    
    
End Sub